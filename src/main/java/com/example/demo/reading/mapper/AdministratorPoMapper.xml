<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.reading.mapper.AdministratorPoMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.reading.model.po.AdministratorPo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="pp_uid" property="ppUid" jdbcType="BIGINT" />
    <result column="pp_uname" property="ppUname" jdbcType="VARCHAR" />
    <result column="pp_pwd" property="ppPwd" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="TINYINT" />
    <result column="pp_role" property="ppRole" jdbcType="TINYINT" />
    <result column="pp_school_id" property="ppSchoolId" jdbcType="BIGINT" />
    <result column="job_number" property="jobNumber" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="is_display" property="isDisplay" jdbcType="TINYINT" />
    <result column="school_name" property="schoolName" jdbcType="VARCHAR" />
    <result column="school_college" property="schoolCollege" jdbcType="VARCHAR" />
    <result column="school_job" property="schoolJob" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, real_name, pp_uid, pp_uname, pp_pwd, role, pp_role, pp_school_id, job_number, 
    sex, phone, status, is_display, school_name, school_college, school_job, gmt_create, 
    gmt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.reading.model.po.AdministratorPoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from administrator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from administrator
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from administrator
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.reading.model.po.AdministratorPoExample" >
    delete from administrator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.reading.model.po.AdministratorPo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into administrator (real_name, pp_uid, pp_uname, 
      pp_pwd, role, pp_role, 
      pp_school_id, job_number, sex, 
      phone, status, is_display, 
      school_name, school_college, school_job, 
      gmt_create, gmt_modified)
    values (#{realName,jdbcType=VARCHAR}, #{ppUid,jdbcType=BIGINT}, #{ppUname,jdbcType=VARCHAR}, 
      #{ppPwd,jdbcType=VARCHAR}, #{role,jdbcType=TINYINT}, #{ppRole,jdbcType=TINYINT}, 
      #{ppSchoolId,jdbcType=BIGINT}, #{jobNumber,jdbcType=BIGINT}, #{sex,jdbcType=TINYINT}, 
      #{phone,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{isDisplay,jdbcType=TINYINT}, 
      #{schoolName,jdbcType=VARCHAR}, #{schoolCollege,jdbcType=VARCHAR}, #{schoolJob,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.reading.model.po.AdministratorPo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into administrator
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="realName != null" >
        real_name,
      </if>
      <if test="ppUid != null" >
        pp_uid,
      </if>
      <if test="ppUname != null" >
        pp_uname,
      </if>
      <if test="ppPwd != null" >
        pp_pwd,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="ppRole != null" >
        pp_role,
      </if>
      <if test="ppSchoolId != null" >
        pp_school_id,
      </if>
      <if test="jobNumber != null" >
        job_number,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isDisplay != null" >
        is_display,
      </if>
      <if test="schoolName != null" >
        school_name,
      </if>
      <if test="schoolCollege != null" >
        school_college,
      </if>
      <if test="schoolJob != null" >
        school_job,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="ppUid != null" >
        #{ppUid,jdbcType=BIGINT},
      </if>
      <if test="ppUname != null" >
        #{ppUname,jdbcType=VARCHAR},
      </if>
      <if test="ppPwd != null" >
        #{ppPwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=TINYINT},
      </if>
      <if test="ppRole != null" >
        #{ppRole,jdbcType=TINYINT},
      </if>
      <if test="ppSchoolId != null" >
        #{ppSchoolId,jdbcType=BIGINT},
      </if>
      <if test="jobNumber != null" >
        #{jobNumber,jdbcType=BIGINT},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDisplay != null" >
        #{isDisplay,jdbcType=TINYINT},
      </if>
      <if test="schoolName != null" >
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="schoolCollege != null" >
        #{schoolCollege,jdbcType=VARCHAR},
      </if>
      <if test="schoolJob != null" >
        #{schoolJob,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.reading.model.po.AdministratorPoExample" resultType="java.lang.Integer" >
    select count(*) from administrator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update administrator
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.ppUid != null" >
        pp_uid = #{record.ppUid,jdbcType=BIGINT},
      </if>
      <if test="record.ppUname != null" >
        pp_uname = #{record.ppUname,jdbcType=VARCHAR},
      </if>
      <if test="record.ppPwd != null" >
        pp_pwd = #{record.ppPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=TINYINT},
      </if>
      <if test="record.ppRole != null" >
        pp_role = #{record.ppRole,jdbcType=TINYINT},
      </if>
      <if test="record.ppSchoolId != null" >
        pp_school_id = #{record.ppSchoolId,jdbcType=BIGINT},
      </if>
      <if test="record.jobNumber != null" >
        job_number = #{record.jobNumber,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isDisplay != null" >
        is_display = #{record.isDisplay,jdbcType=TINYINT},
      </if>
      <if test="record.schoolName != null" >
        school_name = #{record.schoolName,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolCollege != null" >
        school_college = #{record.schoolCollege,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolJob != null" >
        school_job = #{record.schoolJob,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update administrator
    set id = #{record.id,jdbcType=BIGINT},
      real_name = #{record.realName,jdbcType=VARCHAR},
      pp_uid = #{record.ppUid,jdbcType=BIGINT},
      pp_uname = #{record.ppUname,jdbcType=VARCHAR},
      pp_pwd = #{record.ppPwd,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=TINYINT},
      pp_role = #{record.ppRole,jdbcType=TINYINT},
      pp_school_id = #{record.ppSchoolId,jdbcType=BIGINT},
      job_number = #{record.jobNumber,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=TINYINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      is_display = #{record.isDisplay,jdbcType=TINYINT},
      school_name = #{record.schoolName,jdbcType=VARCHAR},
      school_college = #{record.schoolCollege,jdbcType=VARCHAR},
      school_job = #{record.schoolJob,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.reading.model.po.AdministratorPo" >
    update administrator
    <set >
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="ppUid != null" >
        pp_uid = #{ppUid,jdbcType=BIGINT},
      </if>
      <if test="ppUname != null" >
        pp_uname = #{ppUname,jdbcType=VARCHAR},
      </if>
      <if test="ppPwd != null" >
        pp_pwd = #{ppPwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="ppRole != null" >
        pp_role = #{ppRole,jdbcType=TINYINT},
      </if>
      <if test="ppSchoolId != null" >
        pp_school_id = #{ppSchoolId,jdbcType=BIGINT},
      </if>
      <if test="jobNumber != null" >
        job_number = #{jobNumber,jdbcType=BIGINT},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDisplay != null" >
        is_display = #{isDisplay,jdbcType=TINYINT},
      </if>
      <if test="schoolName != null" >
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="schoolCollege != null" >
        school_college = #{schoolCollege,jdbcType=VARCHAR},
      </if>
      <if test="schoolJob != null" >
        school_job = #{schoolJob,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.reading.model.po.AdministratorPo" >
    update administrator
    set real_name = #{realName,jdbcType=VARCHAR},
      pp_uid = #{ppUid,jdbcType=BIGINT},
      pp_uname = #{ppUname,jdbcType=VARCHAR},
      pp_pwd = #{ppPwd,jdbcType=VARCHAR},
      role = #{role,jdbcType=TINYINT},
      pp_role = #{ppRole,jdbcType=TINYINT},
      pp_school_id = #{ppSchoolId,jdbcType=BIGINT},
      job_number = #{jobNumber,jdbcType=BIGINT},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      is_display = #{isDisplay,jdbcType=TINYINT},
      school_name = #{schoolName,jdbcType=VARCHAR},
      school_college = #{schoolCollege,jdbcType=VARCHAR},
      school_job = #{schoolJob,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>